[{"C:\\Users\\Denis\\Documents\\movies-app\\src\\reportWebVitals.js":"1","C:\\Users\\Denis\\Documents\\movies-app\\src\\App.js":"2","C:\\Users\\Denis\\Documents\\movies-app\\src\\index.js":"3","C:\\Users\\Denis\\Documents\\movies-app\\src\\components\\Movie.js":"4","C:\\Users\\Denis\\Documents\\movies-app\\src\\components\\Navbari.js":"5","C:\\Users\\Denis\\Documents\\movies-app\\src\\components\\Login.js":"6"},{"size":362,"mtime":1607258118381,"results":"7","hashOfConfig":"8"},{"size":2791,"mtime":1607895137768,"results":"9","hashOfConfig":"8"},{"size":584,"mtime":1607553386460,"results":"10","hashOfConfig":"8"},{"size":6923,"mtime":1607772103345,"results":"11","hashOfConfig":"8"},{"size":1311,"mtime":1607708771176,"results":"12","hashOfConfig":"8"},{"size":2401,"mtime":1607895788685,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w8gdwc",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\Denis\\Documents\\movies-app\\src\\reportWebVitals.js",[],"C:\\Users\\Denis\\Documents\\movies-app\\src\\App.js",["30","31"],"C:\\Users\\Denis\\Documents\\movies-app\\src\\index.js",[],["32","33"],"C:\\Users\\Denis\\Documents\\movies-app\\src\\components\\Movie.js",["34","35"],"import React, {useEffect, useState} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { MdRemoveRedEye } from 'react-icons/md';\r\nimport { MdAddToQueue } from 'react-icons/md';\r\nimport { BsHeartFill } from 'react-icons/bs';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst IMG_API =  \"https://image.tmdb.org/t/p/w1280\";\r\nconst API_KEY = \"45aa5a2958fa703698da1865305b625b\"; \r\n  \r\nfunction Movie ({id, title, poster_path, overview, vote_average, runtime, video, vote_count, release_date}){\r\n    \r\n\r\n    if(release_date){\r\n        release_date = release_date.split(\"-\", 4);\r\n    }\r\n    \r\n    const[keyValue, setKeyValue] = useState(\"\");\r\n    const[genre, setGenre] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (id) => {\r\n        setShow(true);\r\n        let API = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${API_KEY}&language=en-US`;\r\n            fetch(API)\r\n            .then((res)=>res.json())\r\n            .then((data)=>{\r\n                if(data.results){\r\n                    if(data.results.length>0)\r\n                    {\r\n                        setKeyValue(data.results[0].key);\r\n                    } \r\n                }\r\n            })\r\n\r\n        let GENRE_API = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`;\r\n\r\n            fetch(GENRE_API)\r\n            .then((res)=>res.json())\r\n            .then((data)=>{\r\n                setGenre(data.genres);\r\n            })\r\n            \r\n    };\r\n    \r\n    const setVoteClass = (vote) =>{\r\n        if(vote >= 8){\r\n            return \"green\";\r\n        } else if (vote >=6){\r\n            return \"orange\";\r\n        }else{\r\n            return \"red\";\r\n        }\r\n    }\r\n\r\n    return(       \r\n            <>\r\n            <div className=\"movie\">\r\n                <div className=\"img-wrapper\" >\r\n                    <img src={ poster_path?\r\n                        IMG_API+ poster_path: `https://images.unsplash.com/photo-1485846234645-a62644f84728?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1040&q=80`} \r\n                        onClick={()=>handleShow(id)} alt = {title} className=\"hover-zoom\"/> \r\n                </div>\r\n                <div className=\"movie-info\">\r\n                    <h3>{title}</h3>\r\n                    <span className={`tag ${setVoteClass(vote_average)}`\r\n                    }>{vote_average}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal show={show} onHide={handleClose}\r\n                     animation={true}\r\n                     dialogClassName=\"modal-100w\"\r\n                     aria-labelledby=\"example-custom-modal-styling-title\"\r\n                    >\r\n\r\n                <Modal.Header closeButton>\r\n\r\n                    {  release_date &&\r\n                    <Modal.Title>\r\n                        {title} \r\n                        ({release_date[0]})\r\n                        <span \r\n                            className={`tag ${setVoteClass(vote_average)}`\r\n                            }>{vote_average}/10\r\n                        </span>\r\n                    </Modal.Title>\r\n                    }\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Container>\r\n                        <div className =\"row\">\r\n                            <div className=\"col md-2 w-100\">\r\n                                    <img src={poster_path?\r\n                                    IMG_API+ \r\n                                    poster_path: `https://images.unsplash.com/photo-1485846234645-a62644f84728?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1040&q=80`} \r\n                                    width= \"150\"\r\n                                    height = \"234\" \r\n                                    alt=\"\"/>\r\n                            </div>\r\n                            <div className=\"col\">                               \r\n                                <iframe \r\n                                     id=\"ytplayer\" type=\"text/html\" width=\"500\" height=\"234\" title =\"po\"\r\n                                     src= {`https://www.youtube.com/embed/${keyValue}?&origin=http://example.com`}\r\n                                     frameborder=\"0\">\r\n                                </iframe>                         \r\n                            </div>    \r\n                                                  \r\n                            </div>    \r\n                            <p>\r\n                                {overview}   \r\n                           </p> \r\n                           <div>\r\n                               <Container>\r\n                                   <div className =\"row\">\r\n                                    <div className=\"col\">\r\n                                        <h6>Genres: </h6>\r\n                                        {genre.map((genres)=>\r\n                                            <div className=\"col\" key={genres.name}> {genres.name}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"col\"> \r\n                                       \r\n                                    </div>\r\n                                       \r\n                                   </div>\r\n                              \r\n                               </Container>\r\n                              \r\n                           </div> \r\n                    </Container>             \r\n                 </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Container >\r\n                        <Row className=\"justify-content-md-center\">\r\n                            <Col md={{ span: 1 }}>\r\n                                <Button data-tip=\"Watched\" data-for=\"watchlist\"><MdRemoveRedEye/>\r\n                                </Button> \r\n                            </Col>\r\n                            <Col md={{ span: 1 }}>\r\n                                <Button data-tip=\"Like\" data-for=\"watchlist\"><BsHeartFill />\r\n                                </Button> \r\n                            </Col>\r\n                            <Col md={{ span: 1}}>\r\n                                <Button data-tip=\"Add to Watchlist\" data-for=\"watchlist\"><MdAddToQueue />\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>                   \r\n                    </Container>\r\n                  \r\n                <ReactTooltip id =\"watchlist\" />                   \r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\nexport default Movie;","C:\\Users\\Denis\\Documents\\movies-app\\src\\components\\Navbari.js",["36"],"import React, {useState, useEffect} from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Login from './Login';\r\n\r\nfunction Navbari (){\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    \r\n    return(\r\n      <>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand>MoviesApp</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#home\">Trending</Nav.Link>\r\n          <Nav.Link href=\"#features\">Genres</Nav.Link>\r\n        </Nav>   \r\n        <Nav className=\"login-button\">\r\n          <Button onClick={handleShow}>\r\n            Login\r\n          </Button>                     \r\n        </Nav>\r\n      </Navbar>\r\n      <Modal show={show} onHide={handleClose}\r\n             animation={true}\r\n             className = \"fadeInDown\"\r\n             transparent = {true}\r\n             aria-labelledby=\"example-custom-modal-styling-title\">\r\n               <Modal.Body className=\"mesi\">\r\n               <Login/>\r\n\r\n               </Modal.Body>\r\n      </Modal>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Navbari;","C:\\Users\\Denis\\Documents\\movies-app\\src\\components\\Login.js",["37","38","39","40","41","42","43"],"import React,{ useState, useEffect } from \"react\";\r\nimport axios from 'axios';  \r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\r\n\r\n\r\nfunction Login(props) {  \r\n\r\n\r\n    const [user, setUser] = useState({ Email: '', Password: ''});  \r\n    const apiUrl = \"https://localhost:44368/api/Users\";    \r\n\r\n    const Logini = (e) => {    \r\n        e.preventDefault();    \r\n        const data = { Email:user.Email, Password: user.Password };    \r\n        axios.get(apiUrl, data,{\r\n            mode: 'no-cors',\r\n            headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Content-Type': 'application/json',\r\n    }\r\n        })    \r\n        .then((result) => {    \r\n            debugger;  \r\n            console.log(result.data);   \r\n            const serializedState = JSON.stringify(result.data);  \r\n            var a= localStorage.setItem('myData', serializedState);   \r\n            console.log(\"A:\",a)  \r\n            const useri =result.data.UserDetails;  \r\n            console.log(result.data.message);  \r\n            if (result.status === '200')  \r\n                alert('Successful User');    \r\n  \r\n            else    \r\n                alert('Invalid User');    \r\n        })   \r\n    };\r\n\r\n        const onChange = (e) => {  \r\n            e.preventDefault();\r\n            e.persist();    \r\n            setUser({...user, [e.target.name]: e.target.value});    \r\n        } \r\n        \r\n    \r\n    return (\r\n        <>\r\n        <div >\r\n            <div className=\"formContent\">\r\n                <h2> Login</h2>\r\n                <div className=\"fadeIn first\">\r\n                </div>\r\n      \r\n            <form onSubmit={Logini}>\r\n                <input type=\"text\" value={user.Email} onChange={ onChange }  name=\"Email\" id=\"login\" required=\"true\" className=\"fadeIn second\"  placeholder=\"username\" autoComplete=\"off\"/>\r\n                <input type=\"text\" value={user.Password} onChange={ onChange }  name=\"Password\" id=\"password\" required=\"true\" className=\"fadeIn third\"  placeholder=\"password\" autoComplete=\"off\"/>\r\n                <input type=\"submit\" className=\"fadeIn fourth\" value=\"Log In\" autoComplete=\"off\"/>\r\n            </form>\r\n      \r\n            <div className=\"formFooter\">\r\n                <a className=\"underlineHover\" href=\"#\">Forgot Password?</a>\r\n            </div>\r\n      \r\n        </div>\r\n       </div>\r\n       </>\r\n    );\r\n}\r\n\r\n\r\nexport default Login;",{"ruleId":"44","severity":1,"message":"45","line":8,"column":50,"nodeType":"46","messageId":"47","endLine":8,"endColumn":54},{"ruleId":"44","severity":1,"message":"48","line":10,"column":7,"nodeType":"46","messageId":"47","endLine":10,"endColumn":14},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"44","severity":1,"message":"53","line":1,"column":16,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"44","severity":1,"message":"54","line":5,"column":8,"nodeType":"46","messageId":"47","endLine":5,"endColumn":18},{"ruleId":"44","severity":1,"message":"53","line":1,"column":26,"nodeType":"46","messageId":"47","endLine":1,"endColumn":35},{"ruleId":"44","severity":1,"message":"53","line":1,"column":26,"nodeType":"46","messageId":"47","endLine":1,"endColumn":35},{"ruleId":"44","severity":1,"message":"55","line":3,"column":10,"nodeType":"46","messageId":"47","endLine":3,"endColumn":22},{"ruleId":"44","severity":1,"message":"56","line":3,"column":24,"nodeType":"46","messageId":"47","endLine":3,"endColumn":30},{"ruleId":"44","severity":1,"message":"57","line":3,"column":32,"nodeType":"46","messageId":"47","endLine":3,"endColumn":38},{"ruleId":"44","severity":1,"message":"58","line":3,"column":40,"nodeType":"46","messageId":"47","endLine":3,"endColumn":46},{"ruleId":"44","severity":1,"message":"59","line":28,"column":19,"nodeType":"46","messageId":"47","endLine":28,"endColumn":24},{"ruleId":"60","severity":1,"message":"61","line":60,"column":17,"nodeType":"62","endLine":60,"endColumn":56},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'IMG_API' is assigned a value but never used.","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"'useEffect' is defined but never used.","'InputGroup' is defined but never used.","'MDBContainer' is defined but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","'MDBBtn' is defined but never used.","'useri' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]